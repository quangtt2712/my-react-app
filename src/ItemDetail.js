import "./Css/ItemDetail.css";
import React, { useState, useEffect } from "react";
import FormWeb from "./FormWeb";
import { Swiper, SwiperSlide } from "swiper/react";
import Modal from "react-modal";
import "swiper/css";
import "swiper/css/pagination";
import ArrowBackIosNewIcon from "@mui/icons-material/ArrowBackIosNew";
import ArrowForwardIosIcon from "@mui/icons-material/ArrowForwardIos";
import "swiper/css/navigation";
import { Pagination, Navigation, Autoplay } from "swiper/modules";
import LocalFireDepartmentIcon from "@mui/icons-material/LocalFireDepartment";
import AddShoppingCartIcon from "@mui/icons-material/AddShoppingCart";
import CardGiftcardIcon from "@mui/icons-material/CardGiftcard";
import ArrowRightIcon from '@mui/icons-material/ArrowRight';
Modal.setAppElement("#root");

function Swipers({ imageUrls }) {
  const [modalIsOpen, setModalIsOpen] = useState(false);
  const [selectedImage, setSelectedImage] = useState("");
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [autoplayEnabled, setAutoplayEnabled] = useState(true); // New state for autoplay

  const totalImages = imageUrls.length;

  const openModal = (url) => {
    setSelectedImage(url);
    setModalIsOpen(true);
    setAutoplayEnabled(false); // Disable autoplay when modal opens
  };

  const closeModal = () => {
    setModalIsOpen(false);
    setSelectedImage("");
    setAutoplayEnabled(true); // Enable autoplay when modal closes
  };

  const nextImage = () => {
    setCurrentImageIndex((prevIndex) =>
      prevIndex === totalImages - 1 ? 0 : prevIndex + 1
    );
    setSelectedImage(imageUrls[(currentImageIndex + 1) % totalImages]);
  };

  const prevImage = () => {
    setCurrentImageIndex((prevIndex) =>
      prevIndex === 0 ? totalImages - 1 : prevIndex - 1
    );
    setSelectedImage(
      imageUrls[(currentImageIndex - 1 + totalImages) % totalImages]
    );
  };

  useEffect(() => {
    setSelectedImage(imageUrls[currentImageIndex]);
  }, [currentImageIndex, imageUrls]);

  useEffect(() => {
    // Toggle autoplay based on modal state
    const swiperInstance = document.querySelector(".mySwiper").swiper;
    if (swiperInstance) {
      if (modalIsOpen) {
        swiperInstance.autoplay.stop();
      } else {
        if (autoplayEnabled) {
          swiperInstance.autoplay.start();
        }
      }
    }
  }, [modalIsOpen, autoplayEnabled]);

  return (
    <>
      <Swiper
        slidesPerView={1}
        spaceBetween={0}
        loop={true}
        autoplay={{
          delay: 3000,
        }}
        navigation={true}
        modules={[Pagination, Navigation, Autoplay]}
        className="mySwiper"
        onSlideChange={(swiper) => setCurrentImageIndex(swiper.realIndex)}
      >
        {imageUrls.map((url, index) => (
          <SwiperSlide key={index}>
            <img
              src={url}
              alt={`Slide ${index + 1}`}
              className="img-swiper-item-detail"
              onClick={() => openModal(url, index)}
            />
            <div className="image-count">
              {currentImageIndex + 1} / {imageUrls.length}
            </div>
            <div className="zoom-message">Nh·∫•n v√†o ·∫£nh ƒë·ªÉ ph√≥ng to</div>
          </SwiperSlide>
        ))}
      </Swiper>
      <Modal
        isOpen={modalIsOpen}
        onRequestClose={closeModal}
        contentLabel="Image Modal"
        className="modal"
        overlayClassName="overlay"
      >
        <div onClick={prevImage} className="prev-button">
          <ArrowBackIosNewIcon />
        </div>
        <div onClick={nextImage} className="next-button">
          <ArrowForwardIosIcon />
        </div>
        <button onClick={closeModal} className="close-button">
          ƒê√≥ng
        </button>
        <img src={selectedImage} alt="Zoomed" className="modal-image" />
        <div className="image-count">
          {currentImageIndex + 1} / {imageUrls.length}
        </div>
      </Modal>
    </>
  );
}
const formatAmount = (amount) => {
  return amount.toLocaleString("vi-VN", {
    style: "currency",
    currency: "VND",
  });
};
const calculateOriginalPrice = (salePrice) => {
  return salePrice * 1.1; // Gi√° g·ªëc cao h∆°n 10% so v·ªõi gi√° b√°n
};

const ItemDetail = () => {
  const imageUrls = [
    "https://sys.tmso1.co/images/2GkSc4XRuGda9J5.png",
    "https://sys.tmso1.co/images/Rj4GzHDUoJQZ1HJ.png",
    "https://sys.tmso1.co/images/hoDMb51Txz8nVMc.jpeg",
    "https://firebasestorage.googleapis.com/v0/b/mindmasterminds.appspot.com/o/images%2FYena%20huy%E1%BB%81n%20c%E1%BB%ADu%20thi%C3%AAn.lafthanh.png?alt=media&token=9cbc8e34-20c3-42dd-a011-50dbefa14f04",
    // Th√™m nhi·ªÅu URL h√¨nh ·∫£nh kh√°c v√†o ƒë√¢y
  ];

  return (
    <FormWeb>
      <div className="background-body-item-detail">
        <div className="body-item-detail">
          <div className="five-cols">
            <div className="five-cols-body">
              <Swipers imageUrls={imageUrls} />
            </div>
            <div>üî• ∆Øu ti√™n khi n·∫°p qua ATM/MOMO s·∫Ω ƒëc l·ªùi 50% h∆°n th·∫ª c√†o </div>
          </div>
          <div className="seven-cols">
            <div className="background-id-nick-game">
            <div className="id-nick-game">M√£ s·ªë: 1303704</div>
            <p className="description-id-nick-game">
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn
              long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
              nak l√¥i mun ch√≠ t√¥n raz th√°i nk v√µ th·∫ßn lau phi thi√™n vio th·∫ßn long
            </p>
            </div>

            <div className="text-price-item-detail">
              <div className="backgground-text-atm-momo">
                <div className="text-atm-momo">
                  <div className="background-text-atm-momo">
                    <div> Th·∫ª c√†o</div>
                    <LocalFireDepartmentIcon />

                  </div>
                </div>
                <div>{formatAmount(22728000)}</div>
                <div className="sale-buy-price">Gi√° g·ªëc: &nbsp;<span> {formatAmount(calculateOriginalPrice(22728000))}</span></div>
              </div>
              <div className="small-text">ho·∫∑c</div>
              <div className="backgground-text-atm-momo">
                <div className="text-atm-momo">
                  <div className="background-text-atm-momo">
                    <div> ATM, MOMO</div>
                    <LocalFireDepartmentIcon />
                  </div>
                </div>
                <div>{formatAmount(33728000)}</div>
                <div className="sale-buy-price">Gi√° g·ªëc: &nbsp; <span> {formatAmount(calculateOriginalPrice(33728000))}</span></div>

              </div>
            </div>
            <div className="information-item-detail">
              <div className="background-information-item-detail">
                <div className="text-background-information-item-detail">
                <ArrowRightIcon/>	T∆∞·ªõng
                </div>
                <div className="description-background-information-item-detail">
                  49
                </div>
              </div>
              <div className="background-information-item-detail">
                <div className="text-background-information-item-detail">
                <ArrowRightIcon/>	Trang ph·ª•c
                </div>
                <div className="description-background-information-item-detail">
                  75
                </div>
              </div>
              <div className="background-information-item-detail">
                <div className="text-background-information-item-detail">
                <ArrowRightIcon/>	Rank
                </div>
                <div className="description-background-information-item-detail">
                  Th√°ch ƒë·∫•u
                </div>
              </div>
              <div className="background-information-item-detail">
                <div className="text-background-information-item-detail">
                <ArrowRightIcon/>	T·ªâ l·ªá th·∫Øng
                </div>
                <div className="description-background-information-item-detail">
                  100%
                </div>
              </div>
              <div className="background-information-item-detail">
                <div className="text-background-information-item-detail">
                <ArrowRightIcon/>	 Tr·∫°ng th√°i
                </div>
                <div className="description-background-information-item-detail">
                  Tr·∫Øng Th√¥ng tin
                </div>
              </div>
            </div>
            <div className="background-button-buy">
              <div className="content-background-button-buy">
                <CardGiftcardIcon />
                <div className="text-content-background-button-buy">
                  Mua ngay
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </FormWeb>
  );
};
export default ItemDetail;
